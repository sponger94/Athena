// <auto-generated />
using System;
using Goals.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Goals.Infrastructure.Migrations
{
    [DbContext(typeof(GoalsContext))]
    [Migration("20190311045831_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:goal.goalseq", "'goalseq', 'goal', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Goals.Domain.AggregatesModel.GoalsAggregate.AccessibilityModifier", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("accessibility_modifiers","goal");
                });

            modelBuilder.Entity("Goals.Domain.AggregatesModel.GoalsAggregate.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "goalseq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "goal")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime?>("DateDue");

                    b.Property<string>("Description");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int>("UserId")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("goals","goal");
                });

            modelBuilder.Entity("Goals.Domain.AggregatesModel.GoalsAggregate.GoalDependency", b =>
                {
                    b.Property<int>("GoalId");

                    b.Property<int>("DependentOnGoalId");

                    b.Property<int?>("GoalId1");

                    b.HasKey("GoalId", "DependentOnGoalId");

                    b.HasIndex("DependentOnGoalId");

                    b.HasIndex("GoalId1");

                    b.HasIndex("GoalId", "DependentOnGoalId");

                    b.ToTable("GoalDependency");
                });

            modelBuilder.Entity("Goals.Domain.AggregatesModel.GoalsAggregate.Goal", b =>
                {
                    b.OwnsOne("Goals.Domain.AggregatesModel.GoalsAggregate.GoalSettings", "GoalSettings", b1 =>
                        {
                            b1.Property<int>("GoalId");

                            b1.Property<int?>("GoalCommentAccessibilityId");

                            b1.Property<int?>("GoalViewAccessibilityId");

                            b1.Property<int>("_goalCommentAccessibilityId");

                            b1.Property<int>("_goalViewAccessibilityId");

                            b1.HasKey("GoalId");

                            b1.HasIndex("_goalCommentAccessibilityId");

                            b1.HasIndex("_goalViewAccessibilityId");

                            b1.ToTable("goals","goal");

                            b1.HasOne("Goals.Domain.AggregatesModel.GoalsAggregate.Goal")
                                .WithOne("GoalSettings")
                                .HasForeignKey("Goals.Domain.AggregatesModel.GoalsAggregate.GoalSettings", "GoalId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.HasOne("Goals.Domain.AggregatesModel.GoalsAggregate.AccessibilityModifier", "GoalCommentAccessibility")
                                .WithMany()
                                .HasForeignKey("_goalCommentAccessibilityId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.HasOne("Goals.Domain.AggregatesModel.GoalsAggregate.AccessibilityModifier", "GoalViewAccessibility")
                                .WithMany()
                                .HasForeignKey("_goalViewAccessibilityId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Goals.Domain.AggregatesModel.GoalsAggregate.GoalDependency", b =>
                {
                    b.HasOne("Goals.Domain.AggregatesModel.GoalsAggregate.Goal", "DependentOnGoal")
                        .WithMany()
                        .HasForeignKey("DependentOnGoalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Goals.Domain.AggregatesModel.GoalsAggregate.Goal")
                        .WithMany("Dependencies")
                        .HasForeignKey("GoalId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
